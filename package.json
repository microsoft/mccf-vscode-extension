{
  "name": "vscode-azure-managed-ccf",
  "displayName": "Azure Managed CCF",
  "description": "Develop and deploy Azure Managed CCF applications",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.79.0"
  },
  "repository": {
    "type": "git",
    "url": "https://msazure.visualstudio.com/One/_git/mccf-vscode-extension"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "vscode-azure-managed-ccf.createCCFDevContainer",
        "title": "MCCF: Create CCF App Environment in DevContainer"
      },
      {
        "command": "vscode-azure-managed-ccf.startCCFNetworkDevContainer",
        "title": "MCCF: Start CCF Network in DevContainer"
      },
      {
        "command": "vscode-azure-managed-ccf.startCCFNetworkDocker",
        "title": "MCCF: Start CCF Network in Docker container"
      },
      {
        "command": "vscode-azure-managed-ccf.createMCCFInstance",
        "title": "MCCF: Create MCCF Instance"
      },
      {
        "command": "vscode-azure-managed-ccf.getMCCFInstanceDetails",
        "title": "MCCF: Get MCCF Instance Details"
      },
      {
        "command": "vscode-azure-managed-ccf.createMemberProposal",
        "title": "MCCF: Generate Member Proposal"
      },
      {
        "command": "vscode-azure-managed-ccf.createUserProposal",
        "title": "MCCF: Generate User Proposal"
      },
      {
        "command": "vscode-azure-managed-ccf.generateIdentity",
        "title": "MCCF: Generate Identity Keys"
      },
      {
        "command": "vscode-azure-managed-ccf.submitProposal",
        "title": "MCCF: Submit Proposal"
      },
      {
        "command": "vscode-azure-managed-ccf.voteProposal",
        "title": "MCCF: Vote for Proposal"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile && npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@types/vscode": "^1.79.0",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "@vscode/test-electron": "^2.3.2",
    "copy-webpack-plugin": "^11.0.0",
    "eslint": "^8.41.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^5.0.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "prettier": "^3.0.0",
    "ts-loader": "^9.4.3",
    "typescript": "^5.1.6",
    "webpack": "^5.85.0",
    "webpack-cli": "^5.1.1"
  }
}
